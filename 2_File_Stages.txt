===========================
Basic Git Terms, Different Stages of File & Commands
===========================

1️⃣ git status
--------------
Command:
    git status

Description:
Shows the current state of the working directory and the staging area.
It tells you which files are:
- Untracked
- Modified (but not staged)
- Staged (ready to be committed)

Example output:
    On branch main
    Untracked files:
      (use "git add <file>..." to include in what will be committed)
        newfile.txt

    Changes not staged for commit:
      (use "git add <file>..." to update what will be committed)
        modifiedfile.js

✅ Use this command frequently to see what’s happening in your repo.


2️⃣ Untracked Files
-------------------
Definition:
Files that are in your working directory but are not being tracked by Git yet.

How to track them:
    git add <filename>

Example:
    git add index.html

To Add All Untracked Files:
    git add .

To Put Files Back to Untracked:
  git restore --staged filename 
       or 
  git restore --staged .


3️⃣ Tracked Files
-----------------
Definition:
Files that Git is already monitoring. Tracked files can be:
- Unmodified
- Modified
- Staged

Once a file is added using `git add`, it becomes tracked.


4️⃣ Staged Files
----------------
Definition:
Tracked files that are marked to be included in the next commit.

How to stage files:
    git add <filename>      # Stage a single file
    git add .               # Stage all changes in current directory

These files will be committed using `git commit`.


5️⃣ Commands Summary
---------------------
🔹 View current status:
    git status

🔹 Add untracked or modified file to staging area:
    git add <filename>

🔹 Add everything (all changes):
    git add .

🔹 Commit staged changes:
    git commit -m "Your message here"

